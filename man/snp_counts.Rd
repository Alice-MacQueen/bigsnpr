% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/counts.R
\name{snp_counts}
\alias{snp_counts}
\title{Counts}
\usage{
snp_counts(x, has.pheno = TRUE)
}
\arguments{
\item{x}{A \link[=bigSNP-class]{bigSNP}.}

\item{has.pheno}{Does \strong{\code{x}} has well-specified phenotypes?
i.e. \code{x$fam$affection} is a vector with exactly two values
(and the value coding for cases is larger than the value coding
for controls). So, in particular, no missing value is allowed.
Default is \code{TRUE}.}
}
\value{
A list of:
\itemize{
\item one or two matrices of size 3*m (m is the number of SNPs)
representing the counts of 0, 1 and 2 (by status),
\item an integer vector of size n (n is the number of individuals)
corresponding to the number of missing values per individual.
}
}
\description{
Counts the number of 0, 1, 2
by SNP and phenotype (cases/controls) and the number
of NA by individual. The number of NA by SNP can be deduced
using the relation \eqn{n_{NA} = n - (n_0 + n_1 + n_2)}.
}
\examples{
set.seed(1)

# constructing a fake genotype big.matrix
a <- big.matrix(10, 15, type = "char")
a[] <- sample(c(0, 1, 2, NA), 150, TRUE)
print(a[,])

# constructing a fake incomplete bigSNP with 10 individuals and 15 SNPs
# where the 5 first individuals are cases and the 5 last are controls.
fake <- list()
class(fake) <- "bigSNP"
fake$genotypes <- a
fake$fam$affection <- c(rep(2, 5), rep(1, 5))

# Get counts
print(test1 <- snp_counts(fake))
print(test2 <- snp_counts(fake, has.pheno = FALSE))

# Same results
test1$cols <- test1$cols.controls + test1$cols.cases
print(all.equal(test1$cols, test2$cols))
print(all.equal(test1$rows, test2$rows))

}
