% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/randomSVD-bed.R
\name{bed_randomSVD}
\alias{bed_randomSVD}
\title{Randomized partial SVD}
\usage{
bed_randomSVD(obj.bed, ind.row = rows_along(obj.bed),
  ind.col = cols_along(obj.bed), k = 10, tol = 1e-04,
  verbose = FALSE, ncores = 1)
}
\arguments{
\item{k}{Number of singular vectors/values to compute. Default is \code{10}.
\strong{This algorithm should be used to compute only a
few singular vectors/values.}}

\item{tol}{Precision parameter of \link[RSpectra:svds]{svds}.
Default is \code{1e-4}.}

\item{verbose}{Should some progress be printed? Default is \code{FALSE}.}
}
\value{
A named list (an S3 class "big_SVD") of
\itemize{
\item \code{d}, the singular values,
\item \code{u}, the left singular vectors,
\item \code{v}, the right singular vectors,
\item \code{niter}, the number of the iteration of the algorithm,
\item \code{nops}, number of Matrix-Vector multiplications used,
\item \code{center}, the centering vector,
\item \code{scale}, the scaling vector.
}

Note that to obtain the Principal Components, you must use
\link[=predict.big_SVD]{predict} on the result. See examples.
}
\description{
An algorithm for partial SVD (or PCA) of a Filebacked Big Matrix based on the
algorithm in RSpectra (by Yixuan Qiu and Jiali Mei).\cr
This algorithm is linear in time in all dimensions and is very
memory-efficient. Thus, it can be used on very large big.matrices.
}
\note{
The idea of using this Implicitly Restarted Arnoldi Method algorithm
comes from G. Abraham, Y. Qiu, and M. Inouye,
FlashPCA2: principal component analysis of biobank-scale genotype datasets,
bioRxiv: \url{https://doi.org/10.1101/094714}.
\cr
It proved to be faster than our implementation of the "blanczos" algorithm
in Rokhlin, V., Szlam, A., & Tygert, M. (2010).
A Randomized Algorithm for Principal Component Analysis.
SIAM Journal on Matrix Analysis and Applications, 31(3), 1100-1124.
\url{https://doi.org/10.1137/080736417}.
}
\seealso{
\link[RSpectra:svds]{svds}
}
