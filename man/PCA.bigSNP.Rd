% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCA.bigSNP.R
\name{PCA.bigSNP}
\alias{PCA.bigSNP}
\title{Principal Components of a "bigSNP".}
\usage{
PCA.bigSNP(x, block.size, k = NULL, ind.train = seq(nrow(X)),
  scaling = "none", thr.eigval = 0.001, use.Eigen = TRUE,
  progress = TRUE)
}
\arguments{
\item{x}{A \code{bigSNP}.}

\item{k}{Number of PCs to compute. Default is all.}

\item{scaling}{Scaling to be used, either one of
\itemize{
\item "none",
\item "center": center columns,
\item "scale": center columns and divide by sd,
\item "binom": use \eqn{(x-2p)/sqrt(2p(1-p))} (Patterson 2006),
where p is the MAF,
\item "y-aware": center columns and  multiply by beta of
univariate linear regression.
See \href{https://goo.gl/8G8WMa}{this blog post}.
}}

\item{thr.eigval}{Threshold to remove "unsignificant" PCs.
Default is \code{1e-3}.}
}
\value{
A \code{matrix} of PCs.
}
\description{
Get k or all Principal Components (PCs) of a \code{bigSNP}
}
\details{
See \code{\link[bigstatsr]{BigXYt}}.

Note that for the Eigen decomposition, only \code{R} is
used because is faster (see \href{http://goo.gl/UYJcCw}{stackoverflow}).
If you want a large number of eigenvectors/values, you should
really considerer using Microsoft R Open for speed.
}
\examples{
\dontrun{

  # Creating directory for backing files
  if (!dir.exists("backingfiles")) dir.create("backingfiles")

  if (!file.exists("backingfiles/test_doc.bk")) {
    # Reading the bedfile and storing the data
    bedfile <- system.file("extdata", "example.bed", package = "bigsnpr")
    test <- BedToBig(bedfile, 50, "test_doc")
  } else {
    # Loading it from backing files
    test <- AttachBigSNP("test_doc")
  }

  # Get the first 10 PCs
  test2 <- PCA.bigSNP(test, block.size = 1000, k = 10)

  # Make a nice plot out of the two first PCs
  grp.pop <- test$fam$family.ID
  grp.pop[grp.pop \%in\% paste0("POP", 1:5)] <- 1
  grp.pop[grp.pop \%in\% paste0("POP", 6:11)] <- 2
  grp.pop[grp.pop \%in\% paste0("POP", 12:19)] <- 3
  x <- test2[, 1]
  is.right = (max(x) > max(-x))
  y <- test2[, 2]
  is.top = (max(y) > max(-y))
  legend.pos <- ifelse(is.top, ifelse(is.right, "topright", "topleft"),
                       ifelse(is.right, "bottomright", "bottomleft"))
  plot(x, y, xlab = "PC1", ylab = "PC2", col = grp.pop)
  legend(legend.pos, legend = c("POP1 to POP5",
                                "POP6 to POP11",
                                "POP12 to POP19"),
         col = 1:3, pch = 1, cex = 0.8)

  # Train PCs with only half the data
  n <- nrow(test$genotypes)
  ind.train <- sort(sample(n, n/2))
  test3 <- PCA.bigSNP(test, block.size = 1000, k = 10,
                      ind.train = ind.train)

  # Compare with prcomp
  test4 <- prcomp(test$genotypes[,], scale. = TRUE)
  plot(test4$x, col = grp.pop)
}
}
\references{
Patterson N, Price AL, Reich D (2006) Population Structure and
Eigenanalysis. PLoS Genet 2(12): e190. doi: 10.1371/journal.pgen.0020190
}
\seealso{
\code{\link{bigSNP}} \code{\link{prcomp}}
}

