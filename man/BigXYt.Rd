% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCA.bigSNP.R
\name{BigXYt}
\alias{BigXYt}
\title{Linear kernel matrices for the genotype matrix of a "bigSNP".}
\usage{
BigXYt(x, block.size, ind.train = NULL, use.Eigen = TRUE)
}
\arguments{
\item{x}{A \code{bigSNP}.}

\item{block.size}{Maximum number of loci read at once (for all individuals).}

\item{ind.train}{An optional vector of the row indices that are used.
If not specified, all data are used.}

\item{use.Eigen}{Use the \code{Eigen} library to compute \eqn{X X^T}, the default.
If \code{FALSE}, use \code{R}'s \code{tcrossprod}. See details.}
}
\value{
Either \itemize{
\item A \code{big.matrix} of type \code{double} if all rows are used
in \code{ind.train}.
\item Two \code{big.matrix} of type \code{double}. One for
\eqn{X.train X.train^T} to get Principal Components
and one for \eqn{X.test X.train^T} to project the rest of the data.}
}
\description{
Compute linear kernel matrices for the genotype matrix of a "bigSNP"
with a particular scaling.
}
\details{
To compute \eqn{X X^T}, using \code{Eigen} library is faster.
However, if you link \code{R} with an optimized math library,
using \code{R}'s \code{tcrossprod} can be faster.

For example, you can easily link \code{R} with the
\href{https://software.intel.com/en-us/intel-mkl}{Intel®
Math Kernel Library} (Intel® MKL) through
\href{https://mran.revolutionanalytics.com/open/}{Microsoft
R Open} (MRO). It really improves performance
of \code{R} and \code{RcppArmadillo} matrix computations,
yet not the ones of \code{RcppEigen} (at least not directly).

So, \enumerate{
\item \code{Eigen} should be prefered if you don't change anything,
\item base \code{R} should be prefered if you use MRO,
\item \code{Eigen} may be prefered if you manage to link \code{RcppEigen}
with the MKL (please \href{mailto:florian.prive.21@gmail.com}{contact me}
if you do!).}
}
\examples{
\dontrun{

  bedfile <- system.file("extdata", "example.bed", package = "bigsnpr")

  # Creating directory for backing files
  if (!dir.exists("backingfiles")) dir.create("backingfiles")

  if (!file.exists("backingfiles/test_doc.bk")) {
    # Reading the bedfile and storing the data
    test <- BedToBig(bedfile, 50, "test_doc")
  } else {
    # Loading it from backing files
    test <- AttachBigSNP("test_doc")
  }

  # constructing a bigSNP with 517 rows and 227,100 columns
  # Ok, "sub" is not well adapted when using it like this..
  test2 <- sub.bigSNP(test, ind.col = rep(1:ncol(test$genotypes), times = 50))
  print(dim(test2$genotypes))

  # Computing with Eigen library: 8 seconds on my computer
  print(system.time(test3 <- BigXYt(test2, 1000)))
  print(test3[1:10, 1:5])

  # Computing with base R: 19 seconds on my computer
  # Less than 5 seconds when using Microsoft R Open
  print(system.time(test4 <- BigXYt(test2, 1000, use.Eigen = FALSE)))
  print(test4[1:10, 1:5])
}
}
\seealso{
\code{\link{bigSNP}} \code{\link{tcrossprod}}
}

